version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: library-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: library_management
      MYSQL_USER: library
      MYSQL_PASSWORD: library123456
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - library-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: library-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - library-network

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: library-backend
    restart: always
    ports:
      - "8080:8080"
      - "20880:20880"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/library_management?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root123456
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    depends_on:
      - mysql
      - redis
    networks:
      - library-network

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: library-frontend
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - library-network

volumes:
  mysql_data:
  redis_data:

networks:
  library-network:
    driver: bridge