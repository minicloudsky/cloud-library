apiVersion: apps/v1
kind: Deployment
metadata:
  name: library-backend
  namespace: library-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: library-backend
  template:
    metadata:
      labels:
        app: library-backend
    spec:
      containers:
      - name: backend
        image: library-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        - containerPort: 20880
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "k8s"
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:mysql://mysql:3306/library_management?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8"
        - name: SPRING_DATASOURCE_USERNAME
          value: "root"
        - name: SPRING_DATASOURCE_PASSWORD
          value: "root123456"
        - name: SPRING_REDIS_HOST
          value: "redis"
        - name: SPRING_REDIS_PORT
          value: "6379"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: library-backend
  namespace: library-system
spec:
  selector:
    app: library-backend
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  - name: dubbo
    port: 20880
    targetPort: 20880
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: library-backend-ingress
  namespace: library-system
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: api.library.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: library-backend
            port:
              number: 8080